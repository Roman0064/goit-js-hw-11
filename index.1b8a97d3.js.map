{"mappings":"AAwKA,SAASA,iBAGL,IAFA,IAAMC,EAAYC,SAASC,cAAc,cAEhCC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAQH,SAASI,cAAc,OACnCD,EAAME,UAAUC,IAAI,SACpBH,EAAMI,UAAY,KAClBJ,EAAMK,MAAMC,KAAO,GAAuBC,OAAJ,IAAhBC,KAAKC,SAAe,MAC1CT,EAAMK,MAAMK,OAAS,QACrBV,EAAMK,MAAMM,kBAAoB,GAAqBJ,OAAlB,EAAIC,KAAKC,SAAS,KACrDb,EAAUgB,YAAYZ,GAEtBa,YAAW,WACPb,EAAMc,Q,GACP,I,EA3CXjB,SAASkB,eAAe,cAAcC,iBAAiB,SAAS,WAC5D,IAAMC,EAAOpB,SAASkB,eAAe,QAC/BG,EAASrB,SAASkB,eAAe,UAGrBE,EAAbZ,MAAMc,QAAU,OACrBD,EAAOb,MAAMe,QAAU,IACvBF,EAAOb,MAAMK,OAAS,QAEtBf,iBAGuBE,SAAdkB,eAAe,eAAeV,MAAMc,QAAU,O,IAG3DtB,SAASkB,eAAe,eAAeC,iBAAiB,SAAS,WAC7D,IAAMC,EAAOpB,SAASkB,eAAe,QAC/BG,EAASrB,SAASkB,eAAe,UAGtBE,EAAZZ,MAAMc,QAAU,OACrBF,EAAKZ,MAAMgB,UAAY,kBACvBH,EAAOb,MAAMe,QAAU,IACvBF,EAAOb,MAAMK,OAAS,SAGDb,SAAZkB,eAAe,eAAeV,MAAMc,QAAU,M","sources":["src/js/script.js"],"sourcesContent":["// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n// import { getImages } from './api';\n\n// const PER_PAGE = 40;\n// let searchQuery = '';\n// let pageCount = 1;\n// let isLoading = false;\n// let totalPages = 0;\n\n// const refs = {\n//     formField: document.querySelector('.search-form'),\n//     btnSearch: document.querySelector('.search-form>button'),\n//     searchQuery: document.querySelector(\n//         '.search-form input[name=\"searchQuery\"]'\n//     ),\n//     gallery: document.querySelector('.gallery'),\n//     btnLoad: document.querySelector('.loading-btn'),\n// };\n\n// refs.formField.addEventListener('submit', onSubmit);\n\n// const lightBox = new SimpleLightbox('.gallery a', {\n//     captionsData: 'alt',\n//     captionDelay: 250,\n//     disableScroll: true,\n// });\n\n// function onSubmit(e) {\n//     e.preventDefault();\n//     searchQuery = refs.searchQuery.value.trim();\n//     if (!searchQuery) {\n//         Notify.failure(\"We're sorry, but the search string cannot be empty!\");\n//         return;\n//     }\n//     pageCount = 1;\n//     refs.gallery.innerHTML = '';\n//     e.target.reset();\n//     renderMarkup();\n// }\n\n// async function renderMarkup() {\n//     isLoading = true;\n\n//     try {\n//         const response = await getImages(searchQuery, pageCount);\n//         const { totalHits, hits } = response;\n//         if (totalHits === 0) {\n//             Notify.failure(\n//                 'Sorry, there are no images matching your search query. Please try again.'\n//             );\n//             return;\n//         } else if (pageCount === 1) {\n//             Notify.success(`Hooray! We found ${totalHits} images.`);\n//             totalPages = Math.ceil(totalHits / PER_PAGE);\n//         }\n//         refs.gallery.insertAdjacentHTML('beforeend', createImageMarkup(hits));\n//         scroll();\n\n//         lightBox.refresh();\n\n//         if (pageCount === totalPages) {\n//             refs.btnLoad.classList.add('is-hidden');\n//         } else {\n//             refs.btnLoad.classList.remove('is-hidden');\n//         }\n//     } catch (error) {\n//         console.log(error.message);\n//         Notify.failure(`Oops, something went wrong: ${error.message}`);\n//     }\n//     isLoading = false;\n// }\n\n// function createImageMarkup(imageList) {\n//     return imageList\n//         .map(\n//             ({\n//                 webformatURL,\n//                 largeImageURL,\n//                 tags,\n//                 likes,\n//                 views,\n//                 comments,\n//                 downloads,\n//             }) =>\n//                 `\n//     <div class=\"photo-card\">\n//       <a class=\"gallery-link\" href=\"${largeImageURL}\">\n//         <img\n//           class=\"gallery-image\"\n//           src=\"${webformatURL}\" \n//           alt=\"${tags}\" \n//           loading=\"lazy\" />\n//       </a>\n//       <div class=\"info\">\n//         <p class=\"info-item\"><b>Likes: </b>${likes}</p>\n//         <p class=\"info-item\"><b>Views: </b>${views}</p>\n//         <p class=\"info-item\"><b>Comments: </b>${comments}</p>\n//         <p class=\"info-item\"><b>Downloads: </b>${downloads}</p>\n//       </div>\n      \n//     </div>\n//     `\n//         )\n//         .join('');\n// }\n\n// function onLoadMore() {\n//     pageCount++;\n//     renderMarkup();\n// }\n\n// function scroll() {\n//     if (pageCount <= 1) {\n//         return;\n//     }\n\n//     const { height: cardHeight } = document\n//         .querySelector('.gallery')\n//         .firstElementChild.getBoundingClientRect();\n\n//     window.scrollBy({\n//         top: cardHeight * 2,\n//         behavior: 'smooth',\n//     });\n// }\n\n// refs.btnLoad.addEventListener('click', loadMore);\n\n// function loadMore() {\n//     if (pageCount < totalPages) {\n//         onLoadMore();\n//     } else {\n//         Notify.failure(\"We're sorry, but you've reached the end of search results.\");\n//         refs.btnLoad.classList.add('is-hidden');\n//     }\n// }\n\ndocument.getElementById(\"openButton\").addEventListener(\"click\", function() {\n    const flap = document.getElementById(\"flap\");\n    const letter = document.getElementById(\"letter\");\n\n    // Відкриваємо конверт\n    flap.style.display = \"none\";\n    letter.style.opacity = \"1\";\n    letter.style.bottom = \" 50px\";\n\n    generateHearts();\n\n    // Показуємо кнопку закриття\n    document.getElementById(\"closeButton\").style.display = \"block\";\n});\n\ndocument.getElementById(\"closeButton\").addEventListener(\"click\", function() {\n    const flap = document.getElementById(\"flap\");\n    const letter = document.getElementById(\"letter\");\n\n    // Закриваємо конверт\n    flap.style.display = \"flex\";\n    flap.style.transform = \"rotateX(180deg)\";\n    letter.style.opacity = \"0\";\n    letter.style.bottom = \"-100px\";\n\n    // Ховаємо кнопку закриття\n    document.getElementById(\"closeButton\").style.display = \"none\";\n});\n\nfunction generateHearts() {\n    const container = document.querySelector(\".container\");\n\n    for (let i = 0; i < 50; i++) {\n        let heart = document.createElement(\"div\");\n        heart.classList.add(\"heart\");\n        heart.innerHTML = \"❤️\";\n        heart.style.left = `${Math.random() * 200}px`;\n        heart.style.bottom = \"200px\";\n        heart.style.animationDuration = `${1 + Math.random()}s`;\n        container.appendChild(heart);\n\n        setTimeout(() => {\n            heart.remove();\n        }, 2000);\n    }\n}"],"names":["generateHearts","container","document","querySelector","i","heart","createElement","classList","add","innerHTML","style","left","concat","Math","random","bottom","animationDuration","appendChild","setTimeout","remove","getElementById","addEventListener","flap","letter","display","opacity","transform"],"version":3,"file":"index.1b8a97d3.js.map"}